{"version":3,"sources":["scripts/app.js"],"names":["angular","module","httpService","$http","$q","getMethod","url","deferred","defer","get","then","response","resolve","data","error","reject","status","promise","postMethod","post","service","factory","$inject","MainController","$timeout","webDevTec","toastr","activate","getWebDevTec","vm","classAnimation","showToastr","info","awesomeThings","getTec","forEach","awesomeThing","rank","Math","random","this","creationDate","controller","highscoreService","URL","_","getPlayers","BASE","PLAYERS","console","log","sortBy","reverse","HighScoreController","players","tableRow","directive","templateUrl","restrict","replace","gameTimer","TIMER","link","scope","element","time","$watch","val","timer","setInterval","text","clearInterval","gameService","getWords","WORDS","i","n","length","floor","tmp","gameModalService","$uibModal","open","score","controllerAs","size","backdrop","GameModalController","$uibModalInstance","confirm","name","params","TOKEN","close","cancel","dismiss","GameController","words","resetGame","gameStarted","dangerAlert","successAlert","index","input","inputTmp","mangledWord","originalWord","startNewGame","maxScore","penality","shuffleWord","title","subTitle","inputChanged","increasePenality","match","toUpperCase","slice","submitWord","increaseMaxScore","amount","pow","word","array","split","join","triggerTimer","wrongAnswer","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","constant","window","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-e9cd753629.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('mangledWords', ['ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('httpService', httpService);\r\n    \r\n    /** @ngInject */\r\n    httpService.$inject=['$http', '$q'];\r\n    function httpService($http, $q) {\r\n        var service = {\r\n            get: getMethod,\r\n            post: postMethod\r\n        };\r\n        return service;\r\n\r\n        function getMethod(url){\r\n            var deferred = $q.defer();\r\n            $http.get(url).then(function(response) {\r\n                return deferred.resolve(response.data);\r\n            }, function(error) {\r\n                return deferred.reject(error.status);\r\n            });\r\n            return deferred.promise;\r\n        };\r\n        function postMethod(url, data){\r\n            var deferred = $q.defer();\r\n            $http.post(url, data).then(function(response) {\r\n                return deferred.resolve(response.data);\r\n            }, function(error) {\r\n                return deferred.reject(error.status);\r\n            });\r\n            return deferred.promise;\r\n        };\r\n    }\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('mangledWords')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1485901589666;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('highscoreService', highscoreService);\r\n    \r\n    /** @ngInject */\r\n    highscoreService.$inject = ['httpService', 'URL', '_'];\r\n\r\n    function highscoreService(httpService, URL, _) {\r\n        var service = {\r\n            getPlayers: getPlayers\r\n        };\r\n        return service;\r\n\r\n        function getPlayers(){\r\n            return httpService.get(URL.BASE+URL.PLAYERS)\r\n                .then( function(response){\r\n                    console.log(response);\r\n                    response = _.sortBy(response, 'score').reverse();\r\n                    console.log(response);\r\n                    return response;\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    return undefined;\r\n                });\r\n        }\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('HighScoreController', HighScoreController);\r\n\r\n    HighScoreController.$inject = ['players'];\r\n\r\n    /** @ngInject */\r\n    function HighScoreController(players) {\r\n        console.log(players);\r\n        var vm = this;\r\n        vm.players = players;\r\n    }\r\n})();\n/**\r\n* @desc table row directive for the highscore page\r\n* @example <div table-row></div>\r\n*/\r\n(function(){\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .directive('tableRow', tableRow);\r\n\r\n        function tableRow() {\r\n            var directive = {\r\n                templateUrl: 'app/components/highscore/highscore-table-row.html',\r\n                restrict: 'A',\r\n                replace: true\r\n            };\r\n            return directive;\r\n        }\r\n})();\n/**\r\n* @desc table row directive for the highscore page\r\n* @example <span game-timer></span>\r\n*/\r\n(function(){\r\n'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .directive('gameTimer', gameTimer);\r\n\r\n        gameTimer.$inject = ['TIMER'];\r\n        function gameTimer(TIMER) {\r\n            return {\r\n                link: function(scope, element) {\r\n                    var time;\r\n                    time = TIMER;\r\n                    scope.$watch('game.gameStarted', function (val) {\r\n                        if (val) {\r\n                            var timer = setInterval(function() {\r\n                                if (time > 0 ) {\r\n                                    time--;\r\n                                    element.text(time);\r\n                                } else {\r\n                                    time = TIMER;\r\n                                    element.text(time);\r\n                                    clearInterval(timer);\r\n                                }\r\n                            }, 1000);\r\n                        } else {\r\n                            element.text(time);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('gameService', gameService);\r\n    \r\n    /** @ngInject */\r\n    gameService.$inject = ['httpService', 'URL'];\r\n\r\n    function gameService(httpService, URL) {\r\n        var service = {\r\n            getWords: getWords\r\n        };\r\n        return service;\r\n\r\n        function getWords(){\r\n            return httpService.get(URL.BASE+URL.WORDS)\r\n                .then( function(response){\r\n                    console.log(response);\r\n                    // Fisher-Yates shuffle\r\n                    var n = response.length;\r\n                    var i;\r\n                    while (n > 0) {\r\n                        i = Math.floor(Math.random() * n);\r\n                        n--;\r\n                        var tmp = response[n];\r\n                        response[n] = response[i];\r\n                        response[i] = tmp;\r\n                    }\r\n                    return response;\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    return undefined;\r\n                });\r\n        };\r\n        \r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('GameModalController', GameModalController)\r\n        .factory('gameModalService', gameModalService);\r\n\r\n    /** @ngInject */\r\n    gameModalService.$inject=['$uibModal'];\r\n\r\n    function gameModalService($uibModal) {\r\n        var service = {\r\n            open: open\r\n        };\r\n        return service;\r\n\r\n        function open(score) {\r\n            return $uibModal.open({\r\n                controller: 'GameModalController',\r\n                controllerAs: 'modal',\r\n                templateUrl : 'app/components/game/game.modal.html',\r\n                size: 'mg',\r\n                backdrop: 'static',\r\n                resolve: {\r\n                   score: score\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    GameModalController.$inject = ['$uibModalInstance', 'score', 'httpService', 'URL'];\r\n    function GameModalController($uibModalInstance, score, httpService, URL) {\r\n        var vm = this;\r\n        vm.cancel = $uibModalInstance.dismiss;\r\n        vm.confirm = confirm;\r\n        vm.name = '';\r\n        vm.score = score;\r\n        \r\n        function confirm(){\r\n            console.log(vm.name+\" \"+vm.score);\r\n            var params = {\r\n                name: vm.name,\r\n                score: vm.score,\r\n            }\r\n            httpService.post(URL.BASE+URL.PLAYERS+URL.TOKEN, params)\r\n                .then( function(response){\r\n                    console.log(response);\r\n                    $uibModalInstance.close();\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    $uibModalInstance.close();\r\n                });\r\n        }\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('GameController', GameController);\r\n\r\n    GameController.$inject = ['$timeout', 'gameModalService', 'words', 'TIMER'];\r\n    /** @ngInject */\r\n    function GameController($timeout, gameModalService, words, TIMER) {\r\n        var vm = this;\r\n        vm.inputChanged = inputChanged;\r\n        vm.startNewGame = startNewGame;\r\n        vm.submitWord = submitWord;\r\n        vm.gameStarted = false;\r\n        vm.index = 0;\r\n        vm.input = '';\r\n        vm.inputTmp = '';\r\n        vm.maxScore = 0;\r\n        vm.mangledWord = '....';\r\n        vm.originalWord = '';\r\n        vm.penality = 0;\r\n        vm.dangerAlert = false;\r\n        vm.successAlert = false;\r\n        vm.triggerTimer=false;\r\n        vm.title = \"Game\";\r\n        vm.subTitle = \"Check your score or if you haven't play yet... give it a try!\";\r\n        vm.wrongAnswer = false;\r\n\r\n        function resetGame(){\r\n            vm.gameStarted = false;\r\n            vm.dangerAlert = false;\r\n            vm.successAlert = false;\r\n            vm.index = 0;\r\n            vm.input = '';\r\n            vm.inputTmp = '';\r\n            vm.mangledWord = '....';\r\n            vm.originalWord = '';\r\n            // Fisher-Yates shuffle\r\n            var n = words.length;\r\n            var i;\r\n            while (n > 0) {\r\n                i = Math.floor(Math.random() * n);\r\n                n--;\r\n                var tmp = words[n];\r\n                words[n] = words[i];\r\n                words[i] = tmp;\r\n            }\r\n            \r\n        }\r\n\r\n        function startNewGame(){\r\n            vm.gameStarted = true;\r\n            vm.maxScore = 0;\r\n            vm.penality = 0;\r\n            // vm.time = 10;\r\n            vm.mangledWord = shuffleWord(words[vm.index]);\r\n            vm.originalWord = words[vm.index];\r\n            vm.title = \"Game Started!\";\r\n            vm.subTitle = \"Good luck...\";\r\n            $timeout(function() {\r\n                resetGame();\r\n                gameModalService.open(vm.maxScore);\r\n            }, TIMER * 1000);\r\n        }\r\n\r\n        function inputChanged(){\r\n            if(vm.successAlert){\r\n                vm.successAlert=false;\r\n            } else if (vm.dangerAlert){\r\n                vm.dangerAlert=false;\r\n            }\r\n            //for those who cheats \r\n            if(vm.input.length < vm.inputTmp.length){\r\n                increasePenality(vm.inputTmp.length-vm.input.length);\r\n            }\r\n            //remove all occurrence of whitespaces\r\n            vm.input = vm.input.replace(/ /g, '');\r\n            if(vm.input.match(/^[A-zÀ-ÿ]+$/)){\r\n                vm.input = vm.input.toUpperCase();  \r\n            } else {\r\n                vm.input = vm.input.slice(0,-1);  \r\n            }\r\n            vm.inputTmp = vm.input;\r\n            if(vm.input.length === vm.originalWord.length){\r\n                submitWord();\r\n            }\r\n        }\r\n\r\n        function submitWord(){\r\n            if(vm.input === vm.originalWord.toUpperCase()){\r\n                vm.successAlert = true;\r\n                increaseMaxScore();\r\n                vm.index++;\r\n                vm.penality = 0;\r\n                if(words.length !== vm.index){\r\n                    vm.mangledWord = shuffleWord(words[vm.index]);\r\n                    vm.originalWord = words[vm.index];\r\n                }\r\n            } else {\r\n                vm.dangerAlert = true;\r\n                increasePenality(vm.input.length);\r\n            }\r\n            vm.input = '';\r\n            vm.inputTmp = '';\r\n        }\r\n\r\n        function increasePenality(amount){\r\n            vm.penality+=amount;\r\n            if(vm.penality > vm.originalWord.length){\r\n                vm.penality = vm.originalWord.length;\r\n            }\r\n        }\r\n\r\n        function increaseMaxScore(){\r\n            var tmp = Math.floor(Math.pow(1.95,vm.originalWord.length/3)) - vm.penality;\r\n            if(tmp > 0){\r\n                vm.maxScore += tmp;\r\n            }\r\n        }\r\n\r\n        // Fisher-Yates shuffle\r\n        function shuffleWord(word){\r\n            do{\r\n                var array = word.split(\"\");\r\n                var n = array.length;\r\n                var i;\r\n                while (n > 0) {\r\n                    i = Math.floor(Math.random() * n);\r\n                    n--;\r\n                    var tmp = array[n];\r\n                    array[n] = array[i];\r\n                    array[i] = tmp;\r\n                }\r\n            } while(array.join(\"\") === word);\r\n            return array.join(\"\");\r\n        }\r\n    }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mangledWords')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mangledWords')\n        .config(routerConfig);\n\n    routerConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n      /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('main',{\n                url: '/main',\n                templateUrl: 'app/components/main/main.html'\n                // controller: 'MainController',\n                // controllerAs: 'main'\n            })\n            .state('game', {\n                url: '/game',\n                templateUrl: 'app/components/game/game.html',\n                controller: 'GameController',\n                controllerAs: 'game',\n                resolve: {\n                    words: getWords\n                }\n            }).state('highscore', {\n                url: '/highscore',\n                templateUrl: 'app/components/highscore/highscore.html',\n                controller: 'HighScoreController',\n                controllerAs: 'hs',\n                resolve: {\n                    players: getPlayers\n                }\n            });\n\n        $urlRouterProvider.otherwise('/main');\n    }\n\n    getWords.$inject = ['gameService'];\n    function getWords(gameService){\n        return gameService.getWords();\n    }\n\n    getPlayers.$inject = ['highscoreService'];\n    function getPlayers(highscoreService){\n        return highscoreService.getPlayers();\n    }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mangledWords')\n    .constant('TIMER', 40)\n    .constant('URL', {\n        BASE: 'https://mangledwords-e183b.firebaseio.com/',\n        PLAYERS: 'players.json',\n        WORDS: 'words.json',\n        TOKEN: '?auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODYwNTc1MTgsImV4cCI6MTQ4NjA2MTExOCwiYWRtaW4iOnRydWUsInYiOjB9.ICOijr_VVhBydLrKjxn-YSsWuAo9GnT90UvZuEsiHxE'\n    })\n    .constant('_', window._)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mangledWords')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"mangledWords\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/game/game.html\",\"<div class=\\\"jumbotron text-center\\\"><div class=game-timer><div class=game-timer-label>TIMER</div><span game-timer></span></div><div class=game-score><div class=game-score-label>SCORE</div><span>{{game.maxScore}}</span></div><div class=game-word>{{game.mangledWord}}</div><div class=game-container><input class=\\\"game-input input-lg\\\" ng-disabled=!game.gameStarted type=text ng-model=game.input ng-change=game.inputChanged()></div><!--     <p>\\r\\n        <button ng-disabled=\\\"gameForm.$invalid\\\" ng-click=\\\"game.submitWord()\\\" type=\\\"button\\\" class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"game.wrongAnswer ? \\'btn-danger\\' : \\'btn-primary\\'\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </button>\\r\\n    </p> --><!-- </form> --><p class=\\\"alert alert-success\\\" role=alert ng-show=game.successAlert>Correct! You unmangled the word.</p><p class=\\\"alert alert-danger\\\" role=alert ng-show=game.dangerAlert>Oh no! Wrong answer.</p><p class=\\\"alert alert-warning\\\" role=alert ng-hide=\\\"game.dangerAlert || game.successAlert\\\">Unmangle the word and watch out for the time.</p><div class=row><div class=col-xs-6><button ng-disabled=game.gameStarted ng-click=game.startNewGame() type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Start</button></div><div class=col-xs-6><button ui-sref=main ui-sref-active=active ng-disabled=game.gameStarted type=button class=\\\"btn btn-default btn-lg btn-block\\\">Back</button></div></div></div>\");\n$templateCache.put(\"app/components/game/game.modal.html\",\"<div class=\\\"modal-header text-center\\\"><h1 class=modal-title>Save your score</h1><div class=game-score>{{modal.score}}</div></div><form name=modalForm><div class=\\\"modal-body text-center\\\"><input type=text class=\\\"form-control input-lg\\\" ng-model=modal.name placeholder=\\\"Your name\\\" required></div><div class=\\\"modal-footer text-center\\\"><div class=row><div class=col-xs-6><button class=\\\"btn btn-lg btn-block btn-primary\\\" ng-disabled=modalForm.$invalid ng-click=modal.confirm()>Submit</button></div><div class=col-xs-6><button class=\\\"btn btn-lg btn-block btn-default\\\" ng-click=modal.cancel()>Cancel</button></div></div></div></form>\");\n$templateCache.put(\"app/components/highscore/highscore-table-row.html\",\"<tr><td>{{$index+1}}</td><td>{{player.score}}</td><td>{{player.name}}</td></tr>\");\n$templateCache.put(\"app/components/highscore/highscore.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Highscore</h1><br><p>Check your score or if you haven\\'t play yet... give it a try!</p><p><button ui-sref=main ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Back</button></p></div><div class=table-responsive><table class=\\\"table table-striped text-center\\\"><thead><tr><th class=text-center>Rank</th><th class=text-center>Score</th><th class=text-center>Name</th></tr></thead><tbody><tr table-row ng-repeat=\\\"player in hs.players\\\"></tr></tbody></table></div>\");\n$templateCache.put(\"app/components/main/main.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Mangled words</h1><br><p>Check your score or if you haven\\'t play yet... give it a try!</p><p><button ui-sref=highscore ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Highscore</button></p><p><button ui-sref=game ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Play the game</button></p></div>\");}]);"],"sourceRoot":"/source/"}