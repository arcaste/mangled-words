{"version":3,"sources":["scripts/app.js"],"names":["angular","module","tableRow","directive","templateUrl","restrict","replace","gameModalService","$uibModal","open","score","controller","controllerAs","size","backdrop","resolve","service","GameModalController","$uibModalInstance","gameService","confirm","params","name","vm","savePlayer","then","close","this","cancel","dismiss","factory","$inject","gameTimer","TIMER","link","scope","element","time","$watch","val","timer","setInterval","text","clearInterval","httpService","$http","$q","getMethod","url","deferred","defer","get","response","data","error","reject","status","promise","postMethod","post","highscoreService","URL","_","getPlayers","BASE","PLAYERS","sortBy","reverse","console","log","HighScoreController","players","getWords","WORDS","i","n","length","Math","floor","random","tmp","GameController","$timeout","words","inputChanged","successAlert","dangerAlert","input","inputTmp","penality","originalWord","match","toUpperCase","slice","pow","maxScore","index","mangledWord","shuffleWord","resetGame","gameStarted","word","array","split","join","startNewGame","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","constant","window","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-1052d4ef2a.js","sourcesContent":["(function() {\n\t'use strict';\n\tangular\n\t\t.module('mangledWords', ['ngSanitize', 'ui.router', 'ui.bootstrap']);\n})();\n\n/**\r\n* @desc table row directive for the highscore page\r\n* @example <div table-row></div>\r\n*/\r\n(function(){\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .directive('tableRow', tableRow);\r\n        //Directive for a single row of the highscore\r\n        function tableRow() {\r\n            var directive = {\r\n                templateUrl: 'app/components/highscore/directives/highscore.table-row.html',\r\n                restrict: 'A',\r\n                replace: true\r\n            };\r\n            return directive;\r\n        }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('GameModalController', GameModalController)\r\n        .factory('gameModalService', gameModalService);\r\n\r\n    gameModalService.$inject=['$uibModal'];\r\n\r\n    //Service used to launch a new modal\r\n    function gameModalService($uibModal) {\r\n        var service = {\r\n            open: open\r\n        };\r\n        return service;\r\n\r\n        function open(score) {\r\n            return $uibModal.open({\r\n                controller: 'GameModalController',\r\n                controllerAs: 'modal',\r\n                templateUrl : 'app/components/game/modals/game.modal.html',\r\n                size: 'mg',\r\n                backdrop: 'static',\r\n                resolve: {\r\n                   score: score\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    GameModalController.$inject = ['$uibModalInstance', 'score', 'gameService'];\r\n    //In the modal controller we delegate the persitance of a new player to the game service\r\n    function GameModalController($uibModalInstance, score, gameService) {\r\n        var vm = this;\r\n        vm.cancel = $uibModalInstance.dismiss;\r\n        vm.confirm = confirm;\r\n        vm.name = '';\r\n        vm.score = score;\r\n        \r\n        function confirm(){\r\n            var params = {\r\n                name: vm.name,\r\n                score: vm.score\r\n            }\r\n            return gameService.savePlayer(params).then(function(){\r\n                $uibModalInstance.close();\r\n            });\r\n        }\r\n    }\r\n})();\n(function(){\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .directive('gameTimer', gameTimer);\r\n\r\n        gameTimer.$inject = ['TIMER'];\r\n        \r\n        //Directive that display the timer countdown\r\n        function gameTimer(TIMER) {\r\n            return {\r\n                link: function(scope, element) {\r\n                    var time;\r\n                    time = TIMER;\r\n                    scope.$watch('game.gameStarted', function (val) {\r\n                        if (val) {\r\n                            var timer = setInterval(function() {\r\n                                if (time > 0 ) {\r\n                                    time--;\r\n                                    element.text(time);\r\n                                } else {\r\n                                    time = TIMER;\r\n                                    element.text(time);\r\n                                    clearInterval(timer);\r\n                                }\r\n                            }, 1000);\r\n                        } else {\r\n                            element.text(time);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('httpService', httpService);\r\n    \r\n    httpService.$inject=['$http', '$q'];\r\n    //Pure http abstraction\r\n    function httpService($http, $q) {\r\n        var service = {\r\n            get: getMethod,\r\n            post: postMethod\r\n        };\r\n        return service;\r\n\r\n        function getMethod(url){\r\n            var deferred = $q.defer();\r\n            $http.get(url).then(function(response) {\r\n                return deferred.resolve(response.data);\r\n            }, function(error) {\r\n                return deferred.reject(error.status);\r\n            });\r\n            return deferred.promise;\r\n        }\r\n\r\n        function postMethod(url, data){\r\n            var deferred = $q.defer();\r\n            $http.post(url, data).then(function(response) {\r\n                return deferred.resolve(response.data);\r\n            }, function(error) {\r\n                return deferred.reject(error.status);\r\n            });\r\n            return deferred.promise;\r\n        }\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('highscoreService', highscoreService);\r\n    \r\n    highscoreService.$inject = ['httpService', 'URL', '_'];\r\n    //In the highscore service we perform the persistance call for the highscore component\r\n    function highscoreService(httpService, URL, _) {\r\n        var service = {\r\n            getPlayers: getPlayers\r\n        };\r\n        return service;\r\n\r\n        function getPlayers(){\r\n            return httpService.get(URL.BASE+URL.PLAYERS)\r\n                .then( function(response){\r\n                    response = _.sortBy(response, 'score').reverse();\r\n                    return response;\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    return undefined;\r\n                });\r\n        }\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('HighScoreController', HighScoreController);\r\n\r\n    HighScoreController.$inject = ['players'];\r\n\r\n    function HighScoreController(players) {\r\n        var vm = this;\r\n        vm.players = players;\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .factory('gameService', gameService);\r\n    \r\n    gameService.$inject = ['httpService', 'URL'];\r\n    //In the game service we perform the database interaction for the game component\r\n    function gameService(httpService, URL) {\r\n        var service = {\r\n            getWords: getWords,\r\n            savePlayer: savePlayer\r\n        };\r\n        return service;\r\n\r\n        function getWords(){\r\n            return httpService.get(URL.BASE+URL.WORDS)\r\n                .then( function(response){\r\n                    // Fisher-Yates shuffle\r\n                    var n = response.length;\r\n                    var i;\r\n                    while (n > 0) {\r\n                        i = Math.floor(Math.random() * n);\r\n                        n--;\r\n                        var tmp = response[n];\r\n                        response[n] = response[i];\r\n                        response[i] = tmp;\r\n                    }\r\n                    // console.log(response);\r\n                    return response;\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    return undefined;\r\n                });\r\n        }\r\n\r\n        function savePlayer(params){\r\n            return httpService.post(URL.BASE+URL.PLAYERS, params)\r\n                .then( function(response){\r\n                    // console.log(response);\r\n                    return response;\r\n                }, function(error){\r\n                    console.log(\"Error status: \" + error);\r\n                    return undefined;\r\n                });\r\n        }\r\n    }\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('mangledWords')\r\n        .controller('GameController', GameController);\r\n\r\n    GameController.$inject = ['$timeout', 'gameModalService', 'words', 'TIMER'];\r\n\r\n    function GameController($timeout, gameModalService, words, TIMER) {\r\n        var vm = this;\r\n        var index = 0;\r\n        var inputTmp = '';\r\n        var originalWord = '';\r\n        var penality = 0;\r\n        \r\n        vm.inputChanged = inputChanged;\r\n        vm.startNewGame = startNewGame;\r\n        \r\n        vm.dangerAlert = false;\r\n        vm.gameStarted = false;\r\n        vm.input = '';\r\n        vm.maxScore = 0;\r\n        vm.mangledWord = '....';\r\n        vm.successAlert = false;\r\n\r\n        function inputChanged(){\r\n            //Swap the alert messages\r\n            if(vm.successAlert){\r\n                vm.successAlert=false;\r\n            } else if (vm.dangerAlert){\r\n                vm.dangerAlert=false;\r\n            }\r\n\r\n            //Penality points for erasing characters\r\n            if(vm.input.length < inputTmp.length){\r\n                //Ammount of penality is equal to the number of deleted char\r\n                penality += (inputTmp.length - vm.input.length);\r\n                //Avoiding score less than 0\r\n                if(penality > originalWord.length){\r\n                    penality = originalWord.length;\r\n                }\r\n                inputTmp = vm.input;\r\n                return;\r\n            }\r\n\r\n            //Remove all whitespaces\r\n            vm.input = vm.input.replace(/ /g, '');\r\n            //Check if the last char is a correct one\r\n            if(vm.input.match(/^[A-zÀ-ÿ]+$/)){\r\n                vm.input = vm.input.toUpperCase();  \r\n            } else {\r\n                vm.input = vm.input.slice(0,-1);  \r\n            }\r\n\r\n            inputTmp = vm.input;\r\n            \r\n            //If the input word has the same length of the original one but is not correct\r\n            //we add penality point as the length of the word, popping out the alerts and reset the input \r\n            if(vm.input.length === originalWord.length){\r\n                if(vm.input === originalWord.toUpperCase()){\r\n                    vm.successAlert = true;\r\n                    //Compute score\r\n                    var tmp = Math.floor(Math.pow(1.95, originalWord.length/3)) - penality;\r\n                    if(tmp > 0){\r\n                        vm.maxScore += tmp;\r\n                    }\r\n                    //Get new word\r\n                    index++;\r\n                    penality = 0;\r\n                    if(words.length !== index){\r\n                        vm.mangledWord = shuffleWord(words[index]);\r\n                        originalWord = words[index];\r\n                    }\r\n                } else {\r\n                    vm.dangerAlert = true;\r\n                    penality+=vm.input.length;\r\n                    if(penality > originalWord.length){\r\n                        penality = originalWord.length;\r\n                    }\r\n                }\r\n                vm.input = '';\r\n                inputTmp = '';\r\n            }\r\n        }\r\n\r\n        function resetGame(){\r\n            index = 0;\r\n            inputTmp = '';\r\n            originalWord = '';\r\n            vm.dangerAlert = false;\r\n            vm.gameStarted = false;\r\n            vm.input = '';\r\n            vm.mangledWord = '....';\r\n            vm.successAlert = false;\r\n            // Shuffle the word array for a new game\r\n            var n = words.length;\r\n            var i;\r\n            while (n > 0) {\r\n                i = Math.floor(Math.random() * n);\r\n                n--;\r\n                var tmp = words[n];\r\n                words[n] = words[i];\r\n                words[i] = tmp;\r\n            }\r\n        }\r\n\r\n        // Fisher-Yates shuffle\r\n        function shuffleWord(word){\r\n            do{\r\n                var array = word.split(\"\");\r\n                var n = array.length;\r\n                var i;\r\n                while (n > 0) {\r\n                    i = Math.floor(Math.random() * n);\r\n                    n--;\r\n                    var tmp = array[n];\r\n                    array[n] = array[i];\r\n                    array[i] = tmp;\r\n                }\r\n            } while(array.join(\"\") === word);\r\n            return array.join(\"\");\r\n        }\r\n\r\n        function startNewGame(){\r\n            originalWord = words[index];\r\n            vm.gameStarted = true;\r\n            vm.mangledWord = shuffleWord(words[index]);\r\n            vm.maxScore = 0;\r\n            vm.penality = 0;\r\n            $timeout(function() {\r\n                resetGame();\r\n                gameModalService.open(vm.maxScore);\r\n            }, TIMER * 1000);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\n    'use strict';\n    angular\n        .module('mangledWords')\n        .run(runBlock);\n\n    function runBlock($log) {\n        $log.debug('runBlock end');\n    }\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('mangledWords')\n        .config(routerConfig);\n\n    routerConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n    function routerConfig($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('main',{\n                url: '/main',\n                templateUrl: 'app/components/main/main.html'\n            })\n            .state('game', {\n                url: '/game',\n                templateUrl: 'app/components/game/game.html',\n                controller: 'GameController',\n                controllerAs: 'game',\n                resolve: {\n                    words: getWords\n                }\n            }).state('highscore', {\n                url: '/highscore',\n                templateUrl: 'app/components/highscore/highscore.html',\n                controller: 'HighScoreController',\n                controllerAs: 'hs',\n                resolve: {\n                    players: getPlayers\n                }\n            });\n        $urlRouterProvider.otherwise('/main');\n    }\n    //We inject the values retieved from the database to the controller\n    getWords.$inject = ['gameService'];\n    function getWords(gameService){\n        return gameService.getWords();\n    }\n    //We inject the values retieved from the database to the controller\n    getPlayers.$inject = ['highscoreService'];\n    function getPlayers(highscoreService){\n        return highscoreService.getPlayers();\n    }\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('mangledWords')\n        .constant('TIMER', 40)\n        .constant('URL', {\n            BASE: 'https://mangledwords-e183b.firebaseio.com/',\n            PLAYERS: 'players.json',\n            WORDS: 'words.json'\n        })\n        .constant('_', window._);\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('mangledWords')\n        .config(config);\n\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n})();\n\nangular.module(\"mangledWords\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/game/game.html\",\"<div class=\\\"jumbotron text-center\\\"><div class=game-timer><div class=game-timer-label>TIMER</div><span game-timer></span></div><div class=game-score><div class=game-score-label>SCORE</div><span>{{game.maxScore}}</span></div><div class=game-word>{{game.mangledWord}}</div><div class=game-container><input class=\\\"game-input input-lg\\\" ng-disabled=!game.gameStarted type=text ng-model=game.input ng-change=game.inputChanged()></div><p class=\\\"alert alert-success\\\" role=alert ng-show=game.successAlert>Correct! You unmangled the word.</p><p class=\\\"alert alert-danger\\\" role=alert ng-show=game.dangerAlert>Oh no! Wrong answer.</p><p class=\\\"alert alert-warning\\\" role=alert ng-hide=\\\"game.dangerAlert || game.successAlert\\\">Unmangle the word and watch out for the time.</p><div class=row><div class=col-xs-6><button ng-disabled=game.gameStarted ng-click=game.startNewGame() type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Start</button></div><div class=col-xs-6><button ui-sref=main ui-sref-active=active ng-disabled=game.gameStarted type=button class=\\\"btn btn-default btn-lg btn-block\\\">Back</button></div></div></div>\");\n$templateCache.put(\"app/components/highscore/highscore.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Highscore</h1><br><p>Check your score or if you haven\\'t play yet... give it a try!</p><p><button ui-sref=main ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Back</button></p></div><div class=table-responsive><table class=\\\"table table-striped text-center\\\"><thead><tr><th class=text-center>Rank</th><th class=text-center>Score</th><th class=text-center>Name</th></tr></thead><tbody><tr table-row ng-repeat=\\\"player in hs.players\\\"></tr></tbody></table></div>\");\n$templateCache.put(\"app/components/main/main.html\",\"<div class=\\\"jumbotron text-center\\\"><h1>Mangled words</h1><br><p>Check your score or if you haven\\'t play yet... give it a try!</p><p><button ui-sref=highscore ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Highscore</button></p><p><button ui-sref=game ui-sref-active=active type=button class=\\\"btn btn-primary btn-lg btn-block\\\">Play the game</button></p></div>\");\n$templateCache.put(\"app/components/game/modals/game.modal.html\",\"<div class=\\\"modal-header text-center\\\"><h1 class=modal-title>Save your score</h1><div class=game-score>{{modal.score}}</div></div><form name=modalForm><div class=\\\"modal-body text-center\\\"><input type=text class=\\\"form-control input-lg\\\" ng-model=modal.name placeholder=\\\"Your name\\\" required></div><div class=\\\"modal-footer text-center\\\"><div class=row><div class=col-xs-6><button class=\\\"btn btn-lg btn-block btn-primary\\\" ng-disabled=modalForm.$invalid ng-click=modal.confirm()>Submit</button></div><div class=col-xs-6><button class=\\\"btn btn-lg btn-block btn-default\\\" ng-click=modal.cancel()>Cancel</button></div></div></div></form>\");\n$templateCache.put(\"app/components/highscore/directives/highscore.table-row.html\",\"<tr><td>{{$index+1}}</td><td>{{player.score}}</td><td>{{player.name}}</td></tr>\");}]);"],"sourceRoot":"/source/"}